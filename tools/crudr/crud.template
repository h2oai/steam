// GENERATED BY crudgen; DON'T EDIT

package {{.Name}}

import (
	"database/sql"
	"log"
	"time"

	"github.com/pkg/errors"
	"gopk.in/doug-martin/goqu.v3"
)

{{range .Tables -}}
// ---------- {{range len .Name}} {{end}} ----------
// ---------- {{range len .Name}} {{end}} ----------
// ---------- {{.Name}} ----------
// ---------- {{range len .Name}} {{end}} ----------
// ---------- {{range len .Name}} {{end}} ----------

{{if .IsExported -}}
func (ds *Datastore) Create{{.Name}}({{toArgs .Args}}, options ...func(*QueryConfig)) (int64, error) {
{{else -}}
func (ds *Datastore) create{{.Name}}({{toArgs .Args}}, options ...func(*QueryConfig)) (int64, error) {
{{end -}}
	// Default insert fields
	{{toLower .Name}} := goqu.Record{
		{{range .Args -}}
		"{{snakeToCamel .Name}}": {{.Default}},
		{{end -}}
	}
	// Setup query with optional parameters
	q := NewQueryConfig(ds.db.From("{{snakeToCamel .Name}}"), {{.toLower .Name}})
	for _, option := range options {
		option(q)
	}
	if DEBUG {
		log.Println(q.dataset.ToInsertSql(q.fields))
	}
	// Execut query
	res, err := q.dataset.Insert(q.fields).Exec()
	if err != nil {
		return 0, errors.Wrap(err, "executing query")
	}
	return res.LastInsertId()
}
{{end}}