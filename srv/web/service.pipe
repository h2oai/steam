package web

import github.com/h2oai/steam/master/az

service Service

type Cluster
 Id int64
 Name string
 TypeId int64
 DetailId int64
 Address string
 State string
 CreatedAt int64

type YarnCluster
 Id int64
 EngineId int64
 Size int
 ApplicationId string
 Memory string
 Username string

type ClusterStatus
 Version string
 Status string
 MaxMemory string
 TotalCpuCount int
 TotalAllowedCpuCount int

type Job
 Name string
 ClusterName string
 Description string
 Progress string
 StartedAt int64
 CompletedAt int64

type Project
 Id int64
 Name string
 Description string
 CreatedAt int64

type Datasource
 Id int64
 ProjectId int64
 Name string
 Description string
 Kind string
 Configuration string
 CreatedAt int64

type Dataset
 Id int64
 DatasourceId int64
 Name string
 Description string
 FrameName string
 ResponseColumnName string
 Properties string
 CreatedAt int64

type Model
 Id int64
 TrainingDatasetId int64
 ValidationDatasetId int64
 Name string
 ClusterName string
 Algorithm string
 DatasetName string
 ResponseColumnName string
 LogicalName string
 Location string
 MaxRuntime int
 Metrics string
 CreatedAt int64

type ScoringService
 Id int64
 ModelId int64
 Address string
 Port int
 ProcessId int
 State string
 CreatedAt int64

type Engine
 Id int64
 Name string
 Location string
 CreatedAt int64

type EntityType
 Id int64
 Name string

type ClusterType
 Id int64
 Name string

type EntityHistory
 IdentityId int64
 Action string
 Description string
 CreatedAt int64

type Permission
 Id int64
 Code string
 Description string

type Privilege
 Kind string
 WorkgroupId int64

type EntityPrivilege
 Kind string
 WorkgroupId int64
 WorkgroupName string
 WorkgroupDescription string

type Role
 Id int64
 Name string
 Description string
 Created int64

type Identity
 Id int64
 Name string
 IsActive bool
 LastLogin int64
 Created int64

type Workgroup
 Id int64
 Name string
 Description string
 Created int64

Ping(status bool) status bool

RegisterCluster(address string) clusterId int64
UnregisterCluster(clusterId int64)
StartYarnCluster(clusterName string, engineId int64, size int, memory string, secure bool, username string) clusterId int64
StopYarnCluster(clusterId int64)
GetCluster(clusterId int64) cluster *Cluster
GetYarnCluster(clusterId int64) cluster *YarnCluster
GetClusters(offset int64, limit int64) clusters []*Cluster
GetClusterStatus(clusterId int64) clusterStatus *ClusterStatus
DeleteCluster(clusterId int64)

GetJob(clusterId int64, jobName string) job *Job
GetJobs(clusterId int64) jobs []*Job

CreateProject(name string, description string) projectId int64
GetProjects(offset int64, limit int64) projects []*Project
GetProject(projectId int64) project *Project
DeleteProject(projectId int64)

CreateDatasource(projectId int64, name string, description string, path string) datasourceId int64
GetDatasources(projectId int64, offset int64, limit int64) datasources []*Datasource
GetDatasource(datasourceId int64) datasource *Datasource
UpdateDatasource(datasourceId int64, name string, description string, path string)
DeleteDatasource(datasourceId int64)

CreateDataset(clusterId int64, datasourceId int64, name string, description string, responseColumnName string) datasetId int64
GetDatasets(datasourceId int64, offset int64, limit int64) datasets []*Dataset
GetDataset(datasetId int64) dataset *Dataset
UpdateDataset(datasetId int64, name string, description string, responseColumnName string)
SplitDataset(datasetId int64, ratio1 int, ratio2 int) datasetIds []int64
DeleteDataset(datasetId int64)

BuildModel(clusterId int64, datasetId int64, algorithm string) modelId int64
BuildAutoModel(clusterId int64, dataset string, targetName string, maxRunTime int) model *Model
GetModel(modelId int64) model *Model
GetModels(projectId int64, offset int64, limit int64) models []*Model
GetClusterModels(clusterId int64) models []*Model
ImportModelFromCluster(clusterId int64, projectId int64, modelName string) model *Model
DeleteModel(modelId int64)

StartScoringService(modelId int64, port int) service *ScoringService
StopScoringService(serviceId int64)
GetScoringService(serviceId int64) service *ScoringService
GetScoringServices(offset int64, limit int64) services []*ScoringService
GetScoringServicesForModel(modelId int64, offset int64, limit int64) services []*ScoringService
DeleteScoringService(serviceId int64)

AddEngine(engineName string, enginePath string) engineId int64
GetEngine(engineId int64) engine *Engine
GetEngines() engines []*Engine
DeleteEngine(engineId int64)

GetSupportedEntityTypes() entityTypes []*EntityType
GetSupportedPermissions() permissions []*Permission
GetSupportedClusterTypes() clusterTypes []*ClusterType
GetPermissionsForRole(roleId int64) permissions []*Permission
GetPermissionsForIdentity(identityId int64) permissions []*Permission

CreateRole(name string, description string) roleId int64
GetRoles(offset int64, limit int64) roles []*Role
GetRolesForIdentity(identityId int64) roles []*Role
GetRole(roleId int64) role *Role
GetRoleByName(name string) role *Role
UpdateRole(roleId int64, name string, description string)
LinkRoleAndPermissions(roleId int64, permissionIds []int64)
DeleteRole(roleId int64)

CreateWorkgroup(name string, description string) workgroupId int64
GetWorkgroups(offset int64, limit int64) workgroups []*Workgroup
GetWorkgroupsForIdentity(identityId int64) workgroups []*Workgroup
GetWorkgroup(workgroupId int64) workgroup *Workgroup
GetWorkgroupByName(name string) workgroup *Workgroup
UpdateWorkgroup(workgroupId int64, name string, description string)
DeleteWorkgroup(workgroupId int64)

CreateIdentity(name string, password string) identityId int64
GetIdentities(offset int64, limit int64) identities []*Identity
GetIdentitiesForWorkgroup(workgroupId int64) identities []*Identity
GetIdentitiesForRole(roleId int64) identities []*Identity
GetIdentity(identityId int64) identity *Identity
GetIdentityByName(name string) identity *Identity
LinkIdentityAndWorkgroup(identityId int64, workgroupId int64)
UnlinkIdentityAndWorkgroup(identityId int64, workgroupId int64)
LinkIdentityAndRole(identityId int64, roleId int64)
UnlinkIdentityAndRole(identityId int64, roleId int64)
UpdateIdentity(identityId int64, password string)
DeactivateIdentity(identityId int64)

ShareEntity(kind string, workgroupId int64, entityTypeId int64, entityId int64)
GetEntityPrivileges(entityTypeId int64, entityId int64) privileges []*EntityPrivilege
UnshareEntity(kind string, workgroupId int64, entityTypeId int64, entityId int64)

GetEntityHistory(entityTypeId int64, entityId int64, offset int64, limit int64) history []*EntityHistory
